rules_version = '2';
service cloud.firestore {
  match /databases/{db}/documents {

    // --- USERS COLLECTION ---
    match /users/{uid} {
      allow read: if request.auth != null; // any signed-in user can see others
      allow create, delete: if request.auth != null && request.auth.uid == uid; // only self
      
      // Allow updates with specific rules for friends
      allow update: if request.auth != null && (
        // User can update their own document
        request.auth.uid == uid ||
        // OR allow updating ONLY friends field when adding/removing self
        // Check that only 'friends' field is being modified
        (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['friends']) &&
         request.auth.uid in request.resource.data.get('friends', []))
      );
    }

    // --- CONVERSATIONS COLLECTION ---
    match /conversations/{cid} {
      // Allow authenticated users to read conversations (even if document doesn't exist)
      // This allows checking if conversation exists before creating
      allow get: if request.auth != null;
      
      // List query: only return conversations user is part of
      allow list: if request.auth != null && 
        request.auth.uid in resource.data.participants;
      
      // Allow authenticated users to create conversations if they're in participants
      allow create: if request.auth != null && 
        request.auth.uid in request.resource.data.participants;
      
      // Allow participants to update conversation (lastMessage, etc.)
      allow update: if request.auth != null && 
        request.auth.uid in resource.data.participants;
      
      // Allow participants to delete
      allow delete: if request.auth != null && 
        request.auth.uid in resource.data.participants;

      // --- NESTED MESSAGES ---
      match /messages/{mid} {
        // Allow participants to read/write messages
        allow read, write: if request.auth != null && 
          request.auth.uid in get(/databases/$(db)/documents/conversations/$(cid)).data.participants;
      }
    }
  }
}
